<objdefs>
   <obj.normal id="smooth2" sha="7a49483fff392fd1c10fb15f40dfc8f92f942192">
      <sDescription>exponential smooth, separate rise and fall time</sDescription>
      <author>Johannes Taelman</author>
      <license>BSD</license>
      <inlets>
         <frac32 name="in" description="input"/>
      </inlets>
      <outlets>
         <frac32 name="out" description="output"/>
      </outlets>
      <displays/>
      <params>
         <frac32.u.map name="risetime">
            <MinValue v="0.0"/>
            <MaxValue v="63.5"/>
         </frac32.u.map>
         <frac32.u.map name="falltime">
            <MinValue v="0.0"/>
            <MaxValue v="63.5"/>
         </frac32.u.map>
      </params>
      <attribs/>
      <code.declaration><![CDATA[int32_t val;
]]></code.declaration>
      <code.init><![CDATA[   val = 0;
]]></code.init>
      <code.krate><![CDATA[   if (%in%>val)      val = ___SMMLA(val-%in%, (-1<<26)+(%risetime%>>1),val);
      else val = ___SMMLA(val-%in%,(-1<<26)+(%falltime%>>1),val);
   %out% = val;
]]></code.krate>
   </obj.normal>
</objdefs>