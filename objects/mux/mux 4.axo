<objdefs>
   <obj.normal id="mux 4" sha="868ef20dcb0c47514ee473fd70c3e42cf81d71b8">
      <sDescription>input multiplexer. Output is i1 when s &lt; 1, i[i] when....</sDescription>
      <author>Johannes Taelman</author>
      <license>BSD</license>
      <inlets>
         <frac32 name="i0" description="input 0"/>
         <frac32 name="i1" description="input 1"/>
         <frac32 name="i2" description="input 2"/>
         <frac32 name="i3" description="input 3"/>
         <int32 class="axoloti.inlets.InletInt32Pos" name="s" description="select"/>
      </inlets>
      <outlets>
         <frac32 name="o" description="output"/>
      </outlets>
      <displays/>
      <params/>
      <attribs/>
      <code.krate><![CDATA[   switch(%s%>0?%s%:0){
      case 0: %o%= %i0%;break;
      case 1: %o%= %i1%;break;
      case 2: %o%= %i2%;break;
      case 3: %o%= %i3%;break;
      default: %o%= %i3%;break;
}
]]></code.krate>
   </obj.normal>
   <obj.normal id="mux 4" sha="75f06fecb427e34a1ab0a6f91706320ec1fd39ac">
      <sDescription>input multiplexer. Output is i1 when s &lt; 1, i[i] when....</sDescription>
      <author>Johannes Taelman</author>
      <license>BSD</license>
      <inlets>
         <int32 name="i0" description="input 0"/>
         <int32 name="i1" description="input 1"/>
         <int32 name="i2" description="input 2"/>
         <int32 name="i3" description="input 3"/>
         <int32 class="axoloti.inlets.InletInt32Pos" name="s" description="select"/>
      </inlets>
      <outlets>
         <int32 name="o" description="output"/>
      </outlets>
      <displays/>
      <params/>
      <attribs/>
      <code.krate><![CDATA[   switch(%s%>0?%s%:0){
      case 0: %o%= %i0%;break;
      case 1: %o%= %i1%;break;
      case 2: %o%= %i2%;break;
      case 3: %o%= %i3%;break;
      default: %o%= %i3%;break;
}
]]></code.krate>
   </obj.normal>
   <obj.normal id="mux 4" sha="4145bfd8751449238db95f24fb1cd2a69972d026">
      <sDescription>input multiplexer. Output is i1 when s &lt; 1, i[i] when....</sDescription>
      <author>Johannes Taelman</author>
      <license>BSD</license>
      <inlets>
         <frac32buffer name="i0" description="input 0"/>
         <frac32buffer name="i1" description="input 1"/>
         <frac32buffer name="i2" description="input 2"/>
         <frac32buffer name="i3" description="input 3"/>
         <int32 class="axoloti.inlets.InletInt32Pos" name="s" description="select"/>
      </inlets>
      <outlets>
         <frac32buffer name="o" description="output"/>
      </outlets>
      <displays/>
      <params/>
      <attribs/>
      <code.srate><![CDATA[   switch(%s%>0?%s%:0){
      case 0: %o%= %i0%;break;
      case 1: %o%= %i1%;break;
      case 2: %o%= %i2%;break;
      case 3: %o%= %i3%;break;
      default: %o%= %i3%;break;
}
]]></code.srate>
   </obj.normal>
   <obj.normal id="mux 4" sha="ee02935bddb41185115fef2562f9468b643521af">
      <sDescription>input multiplexer. Output is i1 when s &lt; 1, i[i] when....</sDescription>
      <author>Johannes Taelman</author>
      <license>BSD</license>
      <inlets>
         <bool32 name="i0" description="input 0"/>
         <bool32 name="i1" description="input 1"/>
         <bool32 name="i2" description="input 2"/>
         <bool32 name="i3" description="input 3"/>
         <int32 class="axoloti.inlets.InletInt32Pos" name="s" description="select"/>
      </inlets>
      <outlets>
         <bool32 name="o" description="output"/>
      </outlets>
      <displays/>
      <params/>
      <attribs/>
      <code.krate><![CDATA[   switch(%s%>0?%s%:0){
      case 0: %o%= %i0%;break;
      case 1: %o%= %i1%;break;
      case 2: %o%= %i2%;break;
      case 3: %o%= %i3%;break;
      default: %o%= %i3%;break;
}
]]></code.krate>
   </obj.normal>
   <obj.normal id="mux 4" sha="3a3ff53ee19aa920d58d37b15e29e53f240c7c76">
      <sDescription>input multiplexer. Output is i1 when s &lt; 1, i[i] when....</sDescription>
      <author>Johannes Taelman</author>
      <license>BSD</license>
      <inlets>
         <charptr32 name="i0" description="input 0"/>
         <charptr32 name="i1" description="input 1"/>
         <charptr32 name="i2" description="input 2"/>
         <charptr32 name="i3" description="input 3"/>
         <int32 class="axoloti.inlets.InletInt32Pos" name="s" description="select"/>
      </inlets>
      <outlets>
         <charptr32 name="o" description="output"/>
      </outlets>
      <displays/>
      <params/>
      <attribs/>
      <code.krate><![CDATA[   switch(%s%>0?%s%:0){
      case 0: %o%= %i0%;break;
      case 1: %o%= %i1%;break;
      case 2: %o%= %i2%;break;
      case 3: %o%= %i3%;break;
      default: %o%= %i3%;break;
}
]]></code.krate>
   </obj.normal>
</objdefs>