<objdefs>
   <obj.normal id="read" sha="c6114a6dfbeaf9a2309546a89fcd85e69ab7eee4">
      <sDescription>script with 2 inputs and 2 outputs, running in a separate thread, you must define &quot;void init(void){}&quot; and &quot;void loop(void)&quot;</sDescription>
      <author>Johannes Taelman</author>
      <license>BSD</license>
      <inlets/>
      <outlets>
         <frac32 name="quality" description="signal quality"/>
         <frac32 name="attention" description="attention"/>
         <frac32 name="meditation" description="meditation"/>
         <frac32 name="low_alpha" description="low alpha"/>
         <frac32 name="high_alpha" description="high_alpha"/>
         <frac32 name="low_beta" description="low beta"/>
         <frac32 name="high_beta" description="high_beta"/>
         <frac32 name="low_gamma" description="low gamma"/>
         <frac32 name="high_gamma" description="high_gamma"/>
         <frac32 name="delta" description="delta"/>
         <frac32 name="theta" description="theta"/>
      </outlets>
      <displays/>
      <params/>
      <attribs>
         <text name="script"/>
      </attribs>
      <code.declaration><![CDATA[int32_t _quality;
int32_t _attention;
int32_t _meditation;
int32_t _low_alpha;
int32_t _high_alpha;
int32_t _low_beta;
int32_t _high_beta;
int32_t _low_gamma;
int32_t _high_gamma;
int32_t _delta;
int32_t _theta;
%script%
msg_t ThreadX2(){
  setup();
  while(!chThdShouldTerminate()){
     loop();
     chThdYield();
  }
  chThdExit((msg_t)0);
}
static msg_t ThreadX(void *arg) {
((%parent% *)arg)->ThreadX2();
}
WORKING_AREA(waThreadX, 1024);
Thread *Thd;
]]></code.declaration>
      <code.init><![CDATA[_quality = 0;
_attention = 0;
_meditation = 0;
_low_alpha = 0;
_high_alpha = 0;
_low_beta = 0;
_high_beta = 0;
_low_gamma = 0;
_high_gamma = 0;
_delta = 0;
_theta = 0;
  Thd = chThdCreateStatic(waThreadX, sizeof(waThreadX),
                    NORMALPRIO, ThreadX, (void *)this);
]]></code.init>
      <code.dispose><![CDATA[chThdTerminate(Thd);
chThdWait(Thd);
]]></code.dispose>
      <code.krate><![CDATA[%quality% = this->_quality;
%attention% = this->_attention;
%meditation% = this->_meditation;
%low_alpha% = this->_low_alpha;
%high_alpha% = this->_high_alpha;
%low_beta% = this->_low_beta;
%high_beta% = this->_high_beta;
%low_gamma% = this->_low_gamma;
%high_gamma% = this->_high_gamma;
%delta% = this->_delta;
%theta% = this->_theta;
]]></code.krate>
   </obj.normal>
</objdefs>