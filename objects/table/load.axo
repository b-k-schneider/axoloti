<objdefs>
   <obj.normal id="load" sha="8aa88869e56ef30585b3b339ceb37fdf07b05e89">
      <sDescription>load table from sdcard</sDescription>
      <author>Johannes Taelman</author>
      <license>BSD</license>
      <inlets>
         <charptr32 name="filename" description="file name"/>
         <bool32.rising name="trig" description="trigger"/>
      </inlets>
      <outlets>
         <int32 name="bw" description="bw"/>
      </outlets>
      <displays/>
      <params/>
      <attribs>
         <objref name="table"/>
      </attribs>
      <includes>
         <include>chibios/ext/fatfs/src/ff.h</include>
      </includes>
      <depends>
         <depend>fatfs</depend>
      </depends>
      <code.declaration><![CDATA[  int ntrig;
   int _bw;
]]></code.declaration>
      <code.init><![CDATA[  ntrig = 0;
_bw = 0;
]]></code.init>
      <code.krate><![CDATA[  if ((%trig%>0) && !ntrig) {
    ntrig=1;
    FIL FileObject;
    FRESULT err;
    UINT bytes_read;
    err = f_open(&FileObject, %filename%, FA_READ | FA_OPEN_EXISTING);
    if (err != FR_OK) {TransmitTextMessage("Open failed\n"); _bw = err; return;}
    int rem_sz = sizeof(*%table%.array)*%table%.LENGTH;
    int offset = 0;
    while (rem_sz>0) {
      if (rem_sz>sizeof(fbuff)) {
        err = f_read(&FileObject, fbuff, sizeof(fbuff),&bytes_read);
        if (bytes_read == 0) break;
        memcpy((char *)(&%table%.array[0]) + offset,(char *)fbuff,bytes_read);
        rem_sz -= bytes_read;
        offset += bytes_read;
      } else {
        err = f_read(&FileObject, fbuff, rem_sz,&bytes_read);
        memcpy((char *)(&%table%.array[0]) + offset,(char *)fbuff,bytes_read);
        rem_sz = 0;
      }
    }    if (err != FR_OK) {TransmitTextMessage("Read failed\n"); _bw = err; return;};
    err = f_close(&FileObject);
    if (err != FR_OK) {TransmitTextMessage("Close failed\n");_bw = err; return;};
  }
  else if (!(%trig%>0)) ntrig=0;
%bw% = _bw;
]]></code.krate>
   </obj.normal>
</objdefs>