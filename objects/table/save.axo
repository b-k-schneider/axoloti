<objdefs>
   <obj.normal id="save" sha="505c7da537be6c76007d9f5c00d6731667388322">
      <sDescription>save table to sdcard</sDescription>
      <author>Johannes Taelman</author>
      <license>BSD</license>
      <inlets>
         <charptr32 name="filename" description="file name"/>
         <bool32.rising name="trig" description="trigger"/>
      </inlets>
      <outlets/>
      <displays/>
      <params/>
      <attribs>
         <objref name="table"/>
      </attribs>
      <includes>
         <include>chibios/ext/fatfs/src/ff.h</include>
      </includes>
      <depends>
         <depend>fatfs</depend>
      </depends>
      <code.declaration><![CDATA[  int ntrig;
]]></code.declaration>
      <code.init><![CDATA[  ntrig = 0;
]]></code.init>
      <code.krate><![CDATA[  if ((%trig%>0) && !ntrig) {
    ntrig=1;
    FIL FileObject;
    FRESULT err;
    UINT bytes_written;
    err = f_open(&FileObject, %filename%, FA_WRITE | FA_CREATE_ALWAYS);
    if (err != FR_OK) TransmitTextMessage("Open failed\n");
    int rem_sz = sizeof(*%table%.array)*%table%.LENGTH;
    int offset = 0;
    while (rem_sz>0) {
      if (rem_sz>sizeof(fbuff)) {
        memcpy((char *)fbuff,(char *)(&%table%.array[0]) + offset, sizeof(fbuff));
        err = f_write(&FileObject, fbuff, sizeof(fbuff),&bytes_written);
        rem_sz -= sizeof(fbuff);
        offset += sizeof(fbuff);
      } else {
        memcpy((char *)fbuff,(char *)(&%table%.array[0]) + offset, rem_sz);
        err = f_write(&FileObject, fbuff, rem_sz, &bytes_written);
        rem_sz = 0;
      }
    }    if (err != FR_OK) TransmitTextMessage("Write failed\n");
    err = f_close(&FileObject);
    if (err != FR_OK) TransmitTextMessage("Close failed\n");
  }
  else if (!(%trig%>0)) ntrig=0;
]]></code.krate>
   </obj.normal>
</objdefs>