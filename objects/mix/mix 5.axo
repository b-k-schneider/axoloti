<objdefs>
   <obj.normal id="mix 5" sha="630089895ce383ce4e9dd37d32a9768e0a465a8b">
      <sDescription>5 input k-rate mixer</sDescription>
      <author>Johannes Taelman</author>
      <license>BSD</license>
      <inlets>
         <frac32 name="bus_in" description="input with unity gain"/>
         <frac32 name="in1" description="input 1"/>
         <frac32 name="in2" description="input 2"/>
         <frac32 name="in3" description="input 3"/>
         <frac32 name="in4" description="input 4"/>
         <frac32 name="in5" description="input 5"/>
      </inlets>
      <outlets>
         <frac32 name="out" description="mix out"/>
      </outlets>
      <displays/>
      <params>
         <frac32.u.map name="gain1">
            <MinValue v="0.0"/>
            <MaxValue v="63.5"/>
         </frac32.u.map>
         <frac32.u.map name="gain2">
            <MinValue v="0.0"/>
            <MaxValue v="63.5"/>
         </frac32.u.map>
         <frac32.u.map name="gain3">
            <MinValue v="0.0"/>
            <MaxValue v="63.5"/>
         </frac32.u.map>
         <frac32.u.map name="gain4">
            <MinValue v="0.0"/>
            <MaxValue v="63.5"/>
         </frac32.u.map>
         <frac32.u.map name="gain5">
            <MinValue v="0.0"/>
            <MaxValue v="63.5"/>
         </frac32.u.map>
      </params>
      <attribs/>
      <code.krate><![CDATA[{   int32_t accum = ___SMMUL(%in1%,%gain1%);
   accum = ___SMMLA(%in2%,%gain2%,accum);
;   accum = ___SMMLA(%in3%,%gain3%,accum);
;   accum = ___SMMLA(%in4%,%gain4%,accum);
;   accum = ___SMMLA(%in5%,%gain5%,accum);
;   %out%=  __SSAT(%bus_in% + (accum<<5),28);
}
]]></code.krate>
   </obj.normal>
   <obj.normal id="mix 5" sha="2c736847c4b108230551b01d12e0c1893a51cb26">
      <sDescription>5 input s-rate mixer</sDescription>
      <author>Johannes Taelman</author>
      <license>BSD</license>
      <inlets>
         <frac32buffer name="bus_in" description="input with unity gain"/>
         <frac32buffer name="in1" description="input 1"/>
         <frac32buffer name="in2" description="input 2"/>
         <frac32buffer name="in3" description="input 3"/>
         <frac32buffer name="in4" description="input 4"/>
         <frac32buffer name="in5" description="input 5"/>
      </inlets>
      <outlets>
         <frac32buffer name="out" description="mix out"/>
      </outlets>
      <displays/>
      <params>
         <frac32.u.map name="gain1">
            <MinValue v="0.0"/>
            <MaxValue v="63.5"/>
         </frac32.u.map>
         <frac32.u.map name="gain2">
            <MinValue v="0.0"/>
            <MaxValue v="63.5"/>
         </frac32.u.map>
         <frac32.u.map name="gain3">
            <MinValue v="0.0"/>
            <MaxValue v="63.5"/>
         </frac32.u.map>
         <frac32.u.map name="gain4">
            <MinValue v="0.0"/>
            <MaxValue v="63.5"/>
         </frac32.u.map>
         <frac32.u.map name="gain5">
            <MinValue v="0.0"/>
            <MaxValue v="63.5"/>
         </frac32.u.map>
      </params>
      <attribs/>
      <code.srate><![CDATA[{   int32_t accum = ___SMMUL(%in1%,%gain1%);
   accum = ___SMMLA(%in2%,%gain2%,accum);
;   accum = ___SMMLA(%in3%,%gain3%,accum);
;   accum = ___SMMLA(%in4%,%gain4%,accum);
;   accum = ___SMMLA(%in5%,%gain5%,accum);
;   %out%=  __SSAT(%bus_in% + (accum<<5),28);
}
]]></code.srate>
   </obj.normal>
</objdefs>