<objdefs>
   <obj.normal id="slew" sha="521ab25a6a0aa5d12cbe59b5c1f9630a2f01e167">
      <sDescription>symetric slew rate limiter (not bandwidth limited)</sDescription>
      <author>Johannes Taelman</author>
      <license>BSD</license>
      <inlets>
         <frac32 name="in" description="input"/>
      </inlets>
      <outlets>
         <frac32 name="out" description="output"/>
      </outlets>
      <displays/>
      <params>
         <frac32.u.map name="slew" noLabel="true">
            <MinValue v="0.0"/>
            <MaxValue v="63.5"/>
         </frac32.u.map>
      </params>
      <attribs/>
      <code.declaration><![CDATA[int32_t acc;
]]></code.declaration>
      <code.init><![CDATA[acc = 0;
]]></code.init>
      <code.krate><![CDATA[if (%in%>acc){
  if ((%in%-acc)>%slew%)
    acc += %slew%;
  else
    acc = %in%;
} else {
  if ((acc-%in%)>%slew%)
    acc -= %slew%;
  else
    acc = %in%;
}
acc = __SSAT(acc,28);
%out% = acc;
]]></code.krate>
   </obj.normal>
   <obj.normal id="slew" sha="b21f230004310005f3550792d307774153a89670">
      <sDescription>symetric slew rate limiter (not bandwidth limited)</sDescription>
      <author>Johannes Taelman</author>
      <license>BSD</license>
      <inlets>
         <frac32buffer name="in" description="input"/>
      </inlets>
      <outlets>
         <frac32buffer name="out" description="output"/>
      </outlets>
      <displays/>
      <params>
         <frac32.u.map name="slew" noLabel="true">
            <MinValue v="0.0"/>
            <MaxValue v="63.5"/>
         </frac32.u.map>
      </params>
      <attribs/>
      <code.declaration><![CDATA[int32_t acc;
]]></code.declaration>
      <code.init><![CDATA[acc = 0;
]]></code.init>
      <code.srate><![CDATA[if (%in%>acc){
  if ((%in%-acc)>%slew%)
    acc += %slew%;
  else
    acc = %in%;
} else {
  if ((acc-%in%)>%slew%)
    acc -= %slew%;
  else
    acc = %in%;
}
acc = __SSAT(acc,28);
%out% = acc;
]]></code.srate>
   </obj.normal>
</objdefs>