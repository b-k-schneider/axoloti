<objdefs>
   <obj.normal id="delayedpulsem" sha="abfafffd19f245ebfc9741ff375c59ed9198c4f">
      <sDescription>Generates a single pulse after a after a delay after edge on trigger input. A new trigger before the pulse arrives at the output, will cancel the previous trigger. The generated pulse is so small you won&apos;t notice it on a display! This version has a modulation input for the delay time.</sDescription>
      <author>Johannes Taelman</author>
      <license>BSD</license>
      <inlets>
         <bool32.rising name="trig" description="trigger"/>
         <frac32.bipolar name="delaym" description="delay modulation"/>
      </inlets>
      <outlets>
         <bool32.pulse name="pulse" description="pulse output"/>
      </outlets>
      <displays/>
      <params>
         <frac32.u.map.klineartime.reverse name="delay" noLabel="true">
            <MinValue v="0.0"/>
            <MaxValue v="63.5"/>
         </frac32.u.map.klineartime.reverse>
      </params>
      <attribs/>
      <code.declaration><![CDATA[int32_t val;
int ntrig;
]]></code.declaration>
      <code.init><![CDATA[val = 0;
ntrig = 0;
]]></code.init>
      <code.krate><![CDATA[if ((%trig% > 0) && !ntrig) {
  val = 1 << 30;
  ntrig = 1;
  %pulse% = 0;
}
else {
  if (!(%trig% > 0))
    ntrig = 0;
  if (val>0) {
     val -= (%delay%+%delaym%) >> 4;
     if (val<=0) %pulse% = 1;
     else %pulse% = 0;
  } else %pulse% = 0;
}
]]></code.krate>
   </obj.normal>
</objdefs>