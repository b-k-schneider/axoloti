<objdefs>
   <obj.normal id="bp svf m" sha="561e56d24bf5c702564c7d043fda6d0d3003deec">
      <sDescription>Bandpass filter, state-variable type, modulation inputs</sDescription>
      <author>Johannes Taelman</author>
      <license>BSD</license>
      <inlets>
         <frac32buffer name="in" description="filter input"/>
         <frac32 name="pitchm" description="pitch modulation input"/>
         <frac32 name="resom" description="resonance modulation input"/>
      </inlets>
      <outlets>
         <frac32buffer name="out" description="filter output"/>
      </outlets>
      <displays/>
      <params>
         <frac32.s.map.pitch name="pitch">
            <MinValue v="-64.0"/>
            <MaxValue v="63.5"/>
         </frac32.s.map.pitch>
         <frac32.u.map.filterq name="reso">
            <MinValue v="0.0"/>
            <MaxValue v="63.5"/>
         </frac32.u.map.filterq>
      </params>
      <attribs/>
      <code.declaration><![CDATA[int32_t low;
int32_t band;
]]></code.declaration>
      <code.init><![CDATA[low = 0;
band = 0;
]]></code.init>
      <code.krate><![CDATA[int32_t damp = (0x80<<24) - (__USAT(%resom% + %reso%,27)<<4);
damp = ___SMMUL(damp,damp);
int32_t alpha;
int32_t freq;
MTOFEXTENDED(%pitch% + %pitchm%,alpha);
SINE2TINTERP(alpha,freq);
]]></code.krate>
      <code.srate><![CDATA[int32_t in1 = %in%;
int32_t notch = %in% - (___SMMUL(damp,band)<<1);
low = low + (___SMMUL(freq,band)<<1);
int32_t high  = notch - low;
band = (___SMMUL(freq,high)<<1) + band;// - drive*band*band*band;
int32_t out1 = band;
%out% = out1;
]]></code.srate>
   </obj.normal>
</objdefs>